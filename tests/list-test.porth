include "helpers.porth"

memory list sizeof(List) end
sizeof(int) list list_init
"Empty list\n" puts
list list_dump

1 list list_add
1 list list_add
2 list list_add
3 list list_add
5 list list_add
8 list list_add
13 list list_add
"Adding some fib numbers\n" puts
list list_dump
list @List.count print

"Removing 4th elem\n" puts
4 list list_remove print
list @List.count print
list list_dump

"Setting 0 to 0\n" puts
0 0 list list_set
list list_dump

"Inserting 99 at position 2\n" puts
99 2 list list_insert
list list_dump

"New list\n" puts
memory list2 sizeof(List) end
sizeof(char) list2 list_init list2 list_dump

"Existing list\n" puts
list list_dump

"Sorting list\n" puts
list list_sort
list list_dump

'a' list2 list_add
'b' list2 list_add
list2 list_to_str puts
"\n" puts

"list contains, 'a' and 'c'\n" puts
'a' list2 list_contains print
'c' list2 list_contains print

"list remove 0\n" puts
list list_dump
0 list list_remove print
list list_dump
0 list list_remove print
list list_dump

"Freeing list\n" puts
list list_free
"Freed\n" puts
memory list3 sizeof(List) end
dump_malloc
sizeof(int) list3 list_init
"Free'd list is reused?\n" puts
list @List.data list3 @List.data ptr= print
dump_malloc
sizeof(int) list list_init
list @List.data print
dump_malloc
0 while dup 15 < do
  dup list list_add
  1 +
end drop
list list_dump
dump_malloc
