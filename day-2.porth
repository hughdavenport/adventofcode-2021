include "helpers.porth"

memory x sizeof(int) end
memory part1_y sizeof(int) end
memory part2_y sizeof(int) end
memory aim sizeof(int) end

while skip_whitespace_from_buffer eof? lnot do
  next_char // stk: c
  parse_int_from_buffer // stk: c num
  over 'f' = if // forward
    x over inc64-by // add num to x
    aim @64 * part2_y swap inc64-by // add num*aim to y
  else over 'd' = if* // down
    part1_y over inc64-by // add num to y (part 1 only)
    aim swap inc64-by // add num to aim
  else over 'u' = if* // up
    part1_y over -1 * inc64-by // subtract num from y
    aim swap -1 * inc64-by // subtract num from aim
  else
    drop // UNKNOWN CODE
  end
  // stk: c
  drop
end

// Print out the values for part 1 and 2
x @64 part1_y @64 * print
x @64 part2_y @64 * print
