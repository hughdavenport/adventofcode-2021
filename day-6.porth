include "helpers.porth"

memory backing sizeof(int) 9 * end
memory counts sizeof(int) 9 * end

proc add_number int -- in
  counts a[i]++
end

proc dump-counts in
  0 while dup 9 < do
    dup 0 > if "," puts end
    dup counts @a[i] putu
    1 +
  end drop
  "\n" puts
end

proc get_count -- int in
  0
  0 while dup 9 < do
    swap over counts @a[i] + swap
    1 +
  end drop
end

proc simulate_day in
  0 while dup 9 < do
    0 over backing !a[i]
    1 +
  end drop
  0 counts @a[i]
  dup 8 backing !a[i]
  6 backing !a[i]
  1 while dup 9 < do
    dup counts @a[i]
    over 1 - backing @a[i]
    + over 1 - backing !a[i]
    1 +
  end drop
  9 sizeof(int) * backing counts memcpy drop // size src dest -> dest
end

while eof? lnot do
  parse_int_from_buffer add_number
end
0 while dup 80 < do
  simulate_day
  1 +
end
get_count print
while dup 256 < do
  simulate_day
  1 +
end drop
get_count print
