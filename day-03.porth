include "day-03-procs.porth"

proc calculate_gamma_and_epsilon in
  reset_current_keep // Only used to count ones
  width @64 0 while 2dup > do // stk: width x
    dup count_ones // stk: width x ones
    height @64 2 / > if // 1 is the most common bit in column x
      // Add digit 1 to gamma, and 0 to epsilon
      gamma @64 2 * 1 + gamma !64
      epsilon @64 2 * epsilon !64
    else
      // Add digit 0 to gamma, and 1 to epsilon
      gamma @64 2 * gamma !64
      epsilon @64 2 * 1 + epsilon !64
    end // stk: width x
    1 +
  end drop drop // stk:
end

proc calculate_oxygen_and_co2 in
  reset_current_keep
  0 while dup 2 < do // stk: loop_counter
    dup 1 = if // Second time through loop we look at CO2
      co2_keep current_keep !ptr
      len(co2_keep) sizeof(ptr) current_keep +ptr !ptr
      co2 2 sizeof(ptr) * current_keep +ptr !ptr
    end

    0 while dup width @64 < do // For each column, stk: loop x
      dup count_ones // stk: loop x ones

      // if number of 1's is more than half the selected rows
      //   then search for 0 first time through, 1 second time (opposite if not more than half)
      sizeof(ptr) current_keep +ptr @ptr @64 1 + 2 / >= if over else over 1 + 2 % end
      // stk: loop x search
      over swap update_selection // stk: loop x

      sizeof(ptr) current_keep +ptr @ptr @64 1 = if // We only have one row selected
        // Save this row as either oxygen or co2 (depending on which loop we are in)
        save_current width @64 // stk: loop end_of_x (basically break inner)
      end

      1 + // stk: loop x
    end drop // stk: loop
    1 + // stk: loop
  end drop // stk:
end

read_input

// Print part 1
calculate_gamma_and_epsilon
gamma @64 epsilon @64 * print

// Print part 2
calculate_oxygen_and_co2
oxy @64 co2 @64 * print
